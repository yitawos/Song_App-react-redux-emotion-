{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport SongData from '../data';\nexport const getpost = createAsyncThunk(\"post/getpost\", async _ref => {\n  let {\n    id\n  } = _ref;\n  return fetch(`https://jsonplaceholder.typicode.com/posts`).then(res => res.json());\n});\nexport const sclice = createSlice({\n  name: \"users\",\n  initialState: {\n    value: get\n  },\n  reducers: {\n    addUser: (state, action) => {\n      state.value.push(action.payload);\n    },\n    deleteUser: (state, action) => {\n      state.value = state.value.filter(user => user.id !== action.payload.id);\n    },\n    updateUsername: (state, action) => {\n      state.value.map(user => {\n        if (user.id === action.payload.id) {\n          user.username = action.payload.username;\n        }\n      });\n    }\n  }\n});\nexport const {\n  addUser,\n  deleteUser,\n  updateUsername\n} = sclice.actions;\nexport default sclice.reducer;","map":{"version":3,"names":["createSlice","SongData","getpost","createAsyncThunk","id","fetch","then","res","json","sclice","name","initialState","value","get","reducers","addUser","state","action","push","payload","deleteUser","filter","user","updateUsername","map","username","actions","reducer"],"sources":["C:/Users/Senait/Desktop/Test/song_app/src/feture/user.js"],"sourcesContent":["import {createSlice} from '@reduxjs/toolkit'\r\nimport SongData from '../data'\r\n\r\nexport const getpost = createAsyncThunk(\"post/getpost\", async ({id}) => {\r\n    return fetch(`https://jsonplaceholder.typicode.com/posts`).then((res)=> res.json())\r\n})\r\n\r\nexport const sclice = createSlice({\r\n    name:\"users\",\r\n    initialState: {value : get},\r\n    reducers : {\r\n        addUser : (state,action) => {\r\n        state.value.push(action.payload)\r\n    },\r\n\r\n        deleteUser: (state, action) => {\r\n        state.value = state.value.filter((user) => user.id !== action.payload.id);\r\n      },\r\n\r\n      updateUsername: (state, action) => {\r\n        state.value.map((user) => {\r\n          if (user.id === action.payload.id) {\r\n            user.username = action.payload.username;\r\n          }\r\n        })\r\n      }\r\n    \r\n}\r\n})\r\n\r\nexport const {addUser, deleteUser,updateUsername } = sclice.actions\r\nexport default sclice.reducer"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAC5C,OAAOC,QAAQ,MAAM,SAAS;AAE9B,OAAO,MAAMC,OAAO,GAAGC,gBAAgB,CAAC,cAAc,EAAE,cAAgB;EAAA,IAAT;IAACC;EAAE,CAAC;EAC/D,OAAOC,KAAK,CAAE,4CAA2C,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC;AACvF,CAAC,CAAC;AAEF,OAAO,MAAMC,MAAM,GAAGT,WAAW,CAAC;EAC9BU,IAAI,EAAC,OAAO;EACZC,YAAY,EAAE;IAACC,KAAK,EAAGC;EAAG,CAAC;EAC3BC,QAAQ,EAAG;IACPC,OAAO,EAAG,CAACC,KAAK,EAACC,MAAM,KAAK;MAC5BD,KAAK,CAACJ,KAAK,CAACM,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IACpC,CAAC;IAEGC,UAAU,EAAE,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACS,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAAClB,EAAE,KAAKa,MAAM,CAACE,OAAO,CAACf,EAAE,CAAC;IAC3E,CAAC;IAEDmB,cAAc,EAAE,CAACP,KAAK,EAAEC,MAAM,KAAK;MACjCD,KAAK,CAACJ,KAAK,CAACY,GAAG,CAAEF,IAAI,IAAK;QACxB,IAAIA,IAAI,CAAClB,EAAE,KAAKa,MAAM,CAACE,OAAO,CAACf,EAAE,EAAE;UACjCkB,IAAI,CAACG,QAAQ,GAAGR,MAAM,CAACE,OAAO,CAACM,QAAQ;QACzC;MACF,CAAC,CAAC;IACJ;EAEN;AACA,CAAC,CAAC;AAEF,OAAO,MAAM;EAACV,OAAO;EAAEK,UAAU;EAACG;AAAe,CAAC,GAAGd,MAAM,CAACiB,OAAO;AACnE,eAAejB,MAAM,CAACkB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}